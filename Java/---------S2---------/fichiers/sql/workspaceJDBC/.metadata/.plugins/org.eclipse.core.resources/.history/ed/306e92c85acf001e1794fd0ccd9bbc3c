package com.java.jdbc;

import java.sql.*;
import java.sql.Date;
import java.util.*;
import com.java.beans.*;

public class DataBase {
	private DataSource ds;
	private Connection cnx;
	
	public DataBase() {
	}

	public DataBase(DataSource ds) {
		this.ds = ds;
		this.cnx = ds.getConnection();
	}

	public DataSource getDs() {
		return ds;
	}

	public void setDs(DataSource ds) {
		this.ds = ds;
		this.cnx = ds.getConnection();
	}
	
	public int insertClient(Client cl) {
		try {
			String req = "insert into client values(" + cl.getId() + ", '" 
					+ cl.getNom() + "', '" + cl.getPrenom() + "');" ;
			Statement st = cnx.createStatement();
			return st.executeUpdate(req);
		} catch (Exception e) {
			e.printStackTrace();
			return -1;
		}
	}
	
	public int insertProduit(Produit p) {
		try {
			String req = "insert into produit values(" + p.getRef() + ", '" 
					+ p.getDes() + "', " + p.getPu() + ", " + p.getQs()+ ");" ;
			Statement st = cnx.createStatement();
			return st.executeUpdate(req);
		} catch (Exception e) {
			e.printStackTrace();
			return -1;
		}
	}
	
	public int insertCommande(Commande co) {
		try {
			String req = "insert into commande values(" + co.getCode() + ", '" 
					+ co.getDate() + "', " + co.getQte() + ", " + co.getClient().getId() +", " + co.getProduit().getRef() + ");" ;
			Statement st = cnx.createStatement();
			return st.executeUpdate(req);
		} catch (Exception e) {
			e.printStackTrace();
			return -1;
		}
	}
	
	public Client selectClient(int id ) {
		try {
			String req = "select * from client where id = " + id + ";";
			Statement st = cnx.createStatement();
			ResultSet rs = st.executeQuery(req);
			if(rs.first()) {
				String nom = rs.getString(2);
				String prenom = rs.getString(3);
				return new Client(id, nom, prenom);
			}
			return null;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	
	public Produit selectProduit(int ref ) {
		try {
			String req = "select * from produit where ref = " + ref + ";";
			Statement st = cnx.createStatement();
			ResultSet rs = st.executeQuery(req);
			if(rs.first()) {
				String design = rs.getString(2);
				double pu = rs.getDouble(3);
				int qte = rs.getInt(4);
				return new Produit(ref, design, pu,qte);
			}
			return null;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	
	public Commande selectCommande(int code ) {
		try {
			String req = "select * from commande where code = " + code + ";";
			Statement st = cnx.createStatement();
			ResultSet rs = st.executeQuery(req);
			if(rs.first()) {
				Date date = rs.getDate(2);
				
				int qteComm = rs.getInt(3);
				
				int id_client = rs.getInt(4);
				Client c = selectClient(id_client);
				
				int ref_produit = rs.getInt(5);
				Produit p = selectProduit(ref_produit);
				
				return new Commande(code, date, qteComm, c, p);
			}
			return null;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	
	public List<Client> selectAllClients() {
		try {
			String req = "select * from client ;";
			Statement st = cnx.createStatement();
			ResultSet rs = st.executeQuery(req);
			List<Client> clientList = new ArrayList<Client>();
			while(rs.next()) {
				int id = rs.getInt(1);
				String nom = rs.getString(2);
				String prenom = rs.getString(3);
				clientList.add(new Client(id, nom, prenom));
			}
			return clientList;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	
	public List<Produit> selectAllProduits() {
		try {
			String req = "select * from produit ;";
			Statement st = cnx.createStatement();
			ResultSet rs = st.executeQuery(req);
			List<Produit> prodList = new ArrayList<Produit>();
			while(rs.next()) {
				int ref = rs.getInt(1);
				String design = rs.getString(2);
				Double pu = rs.getDouble(3);
				int qts = rs.getInt(4);
				prodList.add(new Produit(ref, design, pu, qts));
			}
			return prodList;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	
	public List<Commande> selectAllCommandes() {
		try {
			String req = "select * from commande ;";
			Statement st = cnx.createStatement();
			ResultSet rs = st.executeQuery(req);
			List<Commande> commList = new ArrayList<Commande>();
			while(rs.next()) {
				
				int code = rs.getInt(1);
				
				Date date = rs.getDate(2);
				
				int qteComm = rs.getInt(3);
				
				int id_client = rs.getInt(4);
				Client c = selectClient(id_client);
			
				int ref_produit = rs.getInt(5);
				Produit p = selectProduit(ref_produit);
				
				commList.add(new Commande(code, date, qteComm, c, p));
			}
			return commList;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	
	public int updateProduit(String[] values, String condition) {
	    try {
        	String req = new String("update produit set "
        							+ "pu = " +values[0]+ ", " 
        							+ "qts = "+values[1] 		
        							+ " where ref = " + condition + ";");
	        Statement s = this.cnx.createStatement();
	        return s.executeUpdate(req.toString());
	    } catch (Exception e) {
	        e.printStackTrace();
	        return -1;
	    }
	}
	
	public int updateClient(String[] values, String condition) {
	    try {
	        String req = "update client SET nom = ?, prenom = ? WHERE id = ?";
	        PreparedStatement statement = this.cnx.prepareStatement(req);
	        statement.setString(1, values[0]); // Remplace le premier ? avec le nom
	        statement.setString(2, values[1]); // Remplace le deuxième ? avec le prénom
	        statement.setString(3, condition); // Remplace le troisième ? avec la condition (id)
	        return statement.executeUpdate();
	    } catch (Exception e) {
	        e.printStackTrace();
	        return -1;
	    }
	}
}
	
	
	
	
	
	
	
	
	
	





